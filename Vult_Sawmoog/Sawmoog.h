
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#ifndef SAWMOOG_H
#define SAWMOOG_H
#include <stdint.h>
#include <math.h>
#include "vultin.h"
#include "Sawmoog.tables.h"

typedef struct Sawmoog__ctx_type_0 {
   float pre_x;
} Sawmoog__ctx_type_0;

typedef Sawmoog__ctx_type_0 Sawmoog_change_type;

static_inline void Sawmoog__ctx_type_0_init(Sawmoog__ctx_type_0 &_output_){
   Sawmoog__ctx_type_0 _ctx;
   _ctx.pre_x = 0.0f;
   _output_ = _ctx;
   return ;
}

static_inline void Sawmoog_change_init(Sawmoog__ctx_type_0 &_output_){
   Sawmoog__ctx_type_0_init(_output_);
   return ;
}

static_inline uint8_t Sawmoog_change(Sawmoog__ctx_type_0 &_ctx, float x){
   uint8_t v;
   v = (_ctx.pre_x != x);
   _ctx.pre_x = x;
   return v;
}

static_inline float Sawmoog_cubic_clipper(float x){
   if(x <= -0.666666666667f){
      return -0.666666666667f;
   }
   else
   {
      if(x >= 0.666666666667f){
         return 0.666666666667f;
      }
      else
      {
         return (x + (-0.333333333333f * x * x * x));
      }
   }
};

static_inline float Sawmoog_pitchToRate_raw_c0(int index){
   return Sawmoog_pitchToRate_c0[index];
};

static_inline float Sawmoog_pitchToRate_raw_c1(int index){
   return Sawmoog_pitchToRate_c1[index];
};

static_inline float Sawmoog_pitchToRate_raw_c2(int index){
   return Sawmoog_pitchToRate_c2[index];
};

static_inline float Sawmoog_pitchToRate(float pitch){
   int index;
   index = int_clip(float_to_int((0.244094488189f * pitch)),0,31);
   return (float_wrap_array(Sawmoog_pitchToRate_c0)[index] + (pitch * (float_wrap_array(Sawmoog_pitchToRate_c1)[index] + (pitch * float_wrap_array(Sawmoog_pitchToRate_c2)[index]))));
}

static_inline float Sawmoog_cvToPitch(float cv){
   return (24.f + (120.f * cv));
};

static_inline float Sawmoog_cvToRate_raw_c0(int index){
   return Sawmoog_cvToRate_c0[index];
};

static_inline float Sawmoog_cvToRate_raw_c1(int index){
   return Sawmoog_cvToRate_c1[index];
};

static_inline float Sawmoog_cvToRate_raw_c2(int index){
   return Sawmoog_cvToRate_c2[index];
};

static_inline float Sawmoog_cvToRate(float cv){
   int index;
   index = int_clip(float_to_int((141.111111111f * cv)),0,127);
   return (float_wrap_array(Sawmoog_cvToRate_c0)[index] + (cv * (float_wrap_array(Sawmoog_cvToRate_c1)[index] + (cv * float_wrap_array(Sawmoog_cvToRate_c2)[index]))));
}

static_inline float Sawmoog_cvTokHz_raw_c0(int index){
   return Sawmoog_cvTokHz_c0[index];
};

static_inline float Sawmoog_cvTokHz_raw_c1(int index){
   return Sawmoog_cvTokHz_c1[index];
};

static_inline float Sawmoog_cvTokHz_raw_c2(int index){
   return Sawmoog_cvTokHz_c2[index];
};

static_inline float Sawmoog_cvTokHz(float cv){
   int index;
   index = int_clip(float_to_int((31.f * cv)),0,31);
   return (float_wrap_array(Sawmoog_cvTokHz_c0)[index] + (cv * (float_wrap_array(Sawmoog_cvTokHz_c1)[index] + (cv * float_wrap_array(Sawmoog_cvTokHz_c2)[index]))));
}

static_inline float Sawmoog_tune_raw_c0(int index){
   return Sawmoog_tune_c0[index];
};

static_inline float Sawmoog_tune_raw_c1(int index){
   return Sawmoog_tune_c1[index];
};

static_inline float Sawmoog_tune_raw_c2(int index){
   return Sawmoog_tune_c2[index];
};

static_inline float Sawmoog_tune(float cut){
   int index;
   index = int_clip(float_to_int((127.f * cut)),0,127);
   return (float_wrap_array(Sawmoog_tune_c0)[index] + (cut * (float_wrap_array(Sawmoog_tune_c1)[index] + (cut * float_wrap_array(Sawmoog_tune_c2)[index]))));
}

typedef struct Sawmoog__ctx_type_19 {
   float p3;
   float p2;
   float p1;
   float p0;
} Sawmoog__ctx_type_19;

typedef Sawmoog__ctx_type_19 Sawmoog_heun_type;

void Sawmoog__ctx_type_19_init(Sawmoog__ctx_type_19 &_output_);

static_inline void Sawmoog_heun_init(Sawmoog__ctx_type_19 &_output_){
   Sawmoog__ctx_type_19_init(_output_);
   return ;
}

float Sawmoog_heun(Sawmoog__ctx_type_19 &_ctx, float input, float fh, float res);

typedef struct Sawmoog__ctx_type_20 {
   Sawmoog__ctx_type_19 h;
   float fh;
   Sawmoog__ctx_type_0 _inst12a;
} Sawmoog__ctx_type_20;

typedef Sawmoog__ctx_type_20 Sawmoog_moog_type;

void Sawmoog__ctx_type_20_init(Sawmoog__ctx_type_20 &_output_);

static_inline void Sawmoog_moog_init(Sawmoog__ctx_type_20 &_output_){
   Sawmoog__ctx_type_20_init(_output_);
   return ;
}

float Sawmoog_moog(Sawmoog__ctx_type_20 &_ctx, float input, float cut, float res);

typedef struct Sawmoog__ctx_type_21 {
   float rate;
   float phase;
   Sawmoog__ctx_type_20 _inst5c4;
   Sawmoog__ctx_type_0 _inst12a;
} Sawmoog__ctx_type_21;

typedef Sawmoog__ctx_type_21 Sawmoog_process_type;

void Sawmoog__ctx_type_21_init(Sawmoog__ctx_type_21 &_output_);

static_inline void Sawmoog_process_init(Sawmoog__ctx_type_21 &_output_){
   Sawmoog__ctx_type_21_init(_output_);
   return ;
}

float Sawmoog_process(Sawmoog__ctx_type_21 &_ctx, float cv, float cut, float res);



#endif // SAWMOOG_H
